<?xml version="1.0" encoding="UTF-8"?>
<activity id="1" moduleid="3" modulename="page" contextid="19">
  <page id="1">
    <name>Информация по экзамену</name>
    <intro></intro>
    <introformat>1</introformat>
    <content>&lt;h3&gt;Требования по допуску к экзамену&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Выполнить МООК по теме "Программирование на С++"&lt;/li&gt;
&lt;li&gt;Выполнить все лабораторные&lt;/li&gt;
&lt;li&gt;Выполнить контрольную&lt;/li&gt;
&lt;li&gt;Сдать тест&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Теоретические вопросы к экзамену&lt;/h3&gt;
&lt;ol id="yui_3_17_2_1_1706313316445_283"&gt;
&lt;li&gt;
&lt;p&gt;Понятия системы программирования, языка программирования, программы. Архитектуры ЭВМ. Адресное пространство.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Алгоритм. Определение и свойства. Способы описания алгоритмов. Блок-схемы: основные элементы и принципы организации.&lt;/li&gt;
&lt;li&gt;Уровни языков программирования. Трансляция программ. Базовые принципы.&lt;/li&gt;
&lt;li&gt;Структурное программирование. Виды вычислительных процессов. Утверждение структурного программирования. Идеи Дейкстры.&lt;/li&gt;
&lt;li&gt;Назначение таблицы внешних спецификаций. Назначение тестирования и отладки программы. Таблица тестов.&lt;/li&gt;
&lt;li&gt;Структура программы С++. Идентификаторы в С++.&lt;/li&gt;
&lt;li&gt;Описание переменных в программе. Фундаментальные типы данных С++.&lt;/li&gt;
&lt;li&gt;Виды констант программы.&lt;/li&gt;
&lt;li&gt;Выражения. Приоритет операций.&lt;/li&gt;
&lt;li&gt;Арифметические операции, операции отношения, логические операции.&lt;/li&gt;
&lt;li&gt;Инкремент и декремент. Особенности постфиксной и префиксной записи.&lt;/li&gt;
&lt;li&gt;Операция запятая, размер, тернарная операция.&lt;/li&gt;
&lt;li&gt;Операторы следования и перехода (передачи управления).&lt;/li&gt;
&lt;li&gt;Условный оператор и оператор выбора (switch).&lt;/li&gt;
&lt;li&gt;Операторы цикла, их особенности и различия&lt;/li&gt;
&lt;li&gt;Строки. Основные функции для работы со строками&lt;/li&gt;
&lt;li&gt;Потоки ввода-вывода. Базовые принципы. Текстовые и двоичные потоки. Стандартные потоки ввода-вывода. Примеры С++.&lt;/li&gt;
&lt;li&gt;Стандартные потоки ввода-вывода. Извлечение из потока и включение в поток. Манипуляторы потоков. Строковые потоки С++.&lt;/li&gt;
&lt;li&gt;Статические массивы: одномерные и многомерные&lt;/li&gt;
&lt;li&gt;Методы сортировки пузырьком и вставками&lt;/li&gt;
&lt;li&gt;Быстрая сортировка&lt;/li&gt;
&lt;li&gt;Сортировка слиянием&lt;/li&gt;
&lt;li&gt;Пирамидальная сортировка&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Виды памяти: статическая, автоматическая, динамическая память. Пример схемы распределения.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Автоматическая память. Подробно про жизненный цикл её элементов. Стек.&lt;/li&gt;
&lt;li&gt;Динамическая память. Подробно про жизненный цикл её элементов. Особенности new и delete. Сборка мусора. Базовые принципы.&lt;/li&gt;
&lt;li&gt;Указатели. Определение, размер, особенности (нулевые, void*)&lt;/li&gt;
&lt;li&gt;Указатели. 4 базовые операции. Арифметика указателей.&lt;/li&gt;
&lt;li&gt;Ссылки.&lt;/li&gt;
&lt;li&gt;Динамические массивы: одномерные&lt;/li&gt;
&lt;li&gt;Динамические массивы: многомерные&lt;/li&gt;
&lt;li&gt;Функциональная декомпозиция программы. Схема иерархии функций программы. Таблицы спецификаций функций.&lt;/li&gt;
&lt;li&gt;Объявление и определение функции С++. Параметры функции.&lt;/li&gt;
&lt;li&gt;Вызов функции. Возврат значений из функции. Кадр стека функции.&lt;/li&gt;
&lt;li&gt;Передача параметров в функцию с использованием указателей и ссылок.&lt;/li&gt;
&lt;li&gt;Способы передачи массивов в функцию на примере С++. Особенности.&lt;/li&gt;
&lt;li&gt;Рекурсия.&lt;/li&gt;
&lt;li&gt;Разбиение программы на модули, примеры на С++.&lt;/li&gt;
&lt;li&gt;Область действия переменной и область видимости переменной&lt;/li&gt;
&lt;li&gt;Глобальные переменные: объявление, обращения, использование в нескольких модулях.&lt;/li&gt;
&lt;li&gt;Препроцессор, примеры директив препроцессора&lt;/li&gt;
&lt;li&gt;Алгоритм сборки программы, примеры на С++&lt;/li&gt;
&lt;li&gt;Пользовательские типы данных С++: перечисление, объединение, псевдонимы.&lt;/li&gt;
&lt;li&gt;Пользовательские типы данных С++: структура. Объявление, инициализация, создание объектов (к понятию о фабричной функции).&lt;/li&gt;
&lt;li&gt;Пользовательские типы данных С++: структура и методы. Ключевое слово this.&lt;/li&gt;
&lt;li&gt;Указатели на функцию и делегирование (на примере С++ или C#)&lt;/li&gt;
&lt;li&gt;Перегрузка функций (на примере С++ или C#).&lt;/li&gt;
&lt;li&gt;Перегрузка операций (на примере С++ или C#).&lt;/li&gt;
&lt;li&gt;Сборка программы из нескольких файлов (cpp, h)&lt;/li&gt;
&lt;li&gt;Потоки и работа с файлами (на примере С++)&lt;/li&gt;
&lt;li&gt;Представление в ЭВМ целых чисел без знака: коды, операции, особенности использования.&lt;/li&gt;
&lt;li&gt;Представление в ЭВМ целых чисел со знаком: коды, операции, особенности использования.&lt;/li&gt;
&lt;li&gt;Представление в ЭВМ действительных чисел: формы представления, стандарт IEEE 754 (формулировка, перевод числа, особенности операций).&lt;/li&gt;
&lt;li&gt;Абстрактные структуры данных: определения, примеры.&lt;/li&gt;
&lt;li&gt;Абстрактная структура данных – список: структура и классификация.&lt;/li&gt;
&lt;li&gt;Односвязный линейный список: алгоритм основных операций.&lt;/li&gt;
&lt;li&gt;Стек и очередь: основные операции и реализация на С++&lt;/li&gt;
&lt;li&gt;Бинарное дерево поиска: определение, операции поиска, вставки, удаления.&lt;/li&gt;
&lt;li&gt;Бинарное дерево поиска: обход в глубину и ширину.&lt;/li&gt;
&lt;li&gt;Сбалансированное дерево поиска: определение и примеры.&lt;/li&gt;
&lt;li&gt;Абстрактная структура данных – хеш-таблица: определение, структура, операции&lt;/li&gt;
&lt;li&gt;Абстрактные структуры данных: ассоциативный массив (отображение, карта, словарь), множество, мультимножество&lt;/li&gt;
&lt;li&gt;Основные принципы обобщенного программирования&lt;/li&gt;
&lt;li&gt;Основные типы контейнеров библиотеки STL, примеры использования&lt;/li&gt;
&lt;li&gt;Итераторы на примере библиотеки STL&lt;/li&gt;
&lt;li&gt;Принципы работы машина Тьюринга&lt;/li&gt;
&lt;li id="yui_3_17_2_1_1706313316445_282"&gt;Основные тенденции развития языков программирования&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Примеры практических заданий&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Составить и протестировать программу для целых квадратных матрицы порядка 2&amp;lt;=n&amp;lt;=10. Найти k1-количество элементов ниже побочной диагонали матрицы C, меньших a, и k2-количество элементов ниже побочной диагонали матрицы Т, меньших b. Если k1&amp;lt;k2, найти F=T+2k1C, иначе найти H=2C-k2T.&lt;/li&gt;
&lt;li&gt;Дополнительно заданы два целых числа k и m. Найти n – количество не равных k элементов матрицы C, и l-количество не равных m элементов матрицы T.  Если n&amp;gt;l, то найти H=Tt*C+k*T, иначе найти F=Ct*T+l*C, где Tt, Ct- транспонированные матрицы для T и C, соответственно.&lt;/li&gt;
&lt;li&gt;Составить программу добавления узла в линейный двунаправленный список с сохранением упорядоченности по ключу&lt;/li&gt;
&lt;li&gt;Составить и протестировать программу поиска узла в линейном однонаправленном списке (не по уникальному ключу). &lt;span lang="EN-US"&gt;Результат сохранить в массив или вектор STL.&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span lang="EN-US"&gt;Составить и протестировать программу упорядочения элементов линейного однонаправленного списка по возрастанию ключа&lt;br&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span lang="EN-US"&gt;Составить программу удаления узла из бинарного дерева поиска&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;</content>
    <contentformat>1</contentformat>
    <legacyfiles>0</legacyfiles>
    <legacyfileslast>$@NULL@$</legacyfileslast>
    <display>5</display>
    <displayoptions>a:2:{s:10:"printintro";s:1:"0";s:17:"printlastmodified";s:1:"1";}</displayoptions>
    <revision>1</revision>
    <timemodified>1706313372</timemodified>
  </page>
</activity>